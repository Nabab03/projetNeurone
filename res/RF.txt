RANDOM FOREST
RANDOM FOREST3 0.8 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.22      0.36         9
         2.0       0.78      0.89      0.83       285
         3.0       0.00      0.00      0.00       166
         4.0       0.52      0.23      0.32        47
         5.0       0.90      0.73      0.80        96
         6.0       0.77      0.97      0.85       146
         7.0       1.00      0.60      0.75         5
         8.0       0.88      1.00      0.94        95
         9.0       0.00      0.00      0.00         4
        10.0       0.88      0.41      0.56       189
        11.0       0.57      0.98      0.72       491
        12.0       0.00      0.00      0.00       118
        13.0       1.00      0.95      0.97        41
        14.0       0.98      1.00      0.99       253
        15.0       1.00      0.53      0.69        77
        16.0       1.00      1.00      1.00        18

   micro avg       0.73      0.73      0.73      2040
   macro avg       0.70      0.59      0.61      2040
weighted avg       0.67      0.73      0.67      2040

[[  2   0   0   0   0   0   0   7   0   0   0   0   0   0   0   0]
 [  0 254  10  10   0   0   0   0   0   0  11   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0 166   0   0   0   0   0]
 [  0  19  10  11   0   0   0   0   0   0   7   0   0   0   0   0]
 [  0   1   0   0  70  12   0   6   0   0   7   0   0   0   0   0]
 [  0   0   0   0   0 141   0   0   0   0   0   0   0   5   0   0]
 [  0   1   0   0   0   0   3   0   0   0   1   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   4   0   0   0   0   0   0   0   0   0   0]
 [  0   2   0   0   0   0   0   0   0  77 110   0   0   0   0   0]
 [  0   2   6   0   0   0   0   0   0   2 481   0   0   0   0   0]
 [  0  47  10   0   0   0   0   0   0   9  52   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   2   0  39   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   0   0   0   8  27   0   0   0   0   1   0   0   0  41   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  18]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST5 0.8 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.11      0.20         9
         2.0       0.83      0.98      0.90       285
         3.0       0.00      0.00      0.00       166
         4.0       1.00      0.11      0.19        47
         5.0       1.00      0.70      0.82        96
         6.0       0.73      0.97      0.83       146
         7.0       1.00      0.40      0.57         5
         8.0       0.87      1.00      0.93        95
         9.0       1.00      0.25      0.40         4
        10.0       0.93      0.47      0.63       184
        11.0       0.58      0.98      0.72       491
        12.0       0.44      0.03      0.06       118
        13.0       1.00      0.83      0.91        41
        14.0       0.99      1.00      0.99       253
        15.0       0.84      0.47      0.60        77
        16.0       1.00      0.89      0.94        18

   micro avg       0.74      0.74      0.74      2035
   macro avg       0.82      0.57      0.61      2035
weighted avg       0.72      0.74      0.68      2035

[[  1   0   0   0   0   0   0   8   0   0   0   0   0   0   0   0]
 [  0 280   0   0   0   0   0   0   0   0   5   0   0   0   0   0]
 [  0   6   0   0   0   0   0   0   0   0 160   0   0   0   0   0]
 [  0  12   8   5   0   0   0   0   0   0  17   5   0   0   0   0]
 [  0   0   1   0  67  11   0   6   0   0   9   0   0   0   2   0]
 [  0   0   0   0   0 142   0   0   0   0   0   0   0   3   1   0]
 [  0   1   0   0   0   0   2   0   0   0   2   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   3   0   0   1   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   0  87  97   0   0   0   0   0]
 [  0   4   7   0   0   0   0   0   0   1 479   0   0   0   0   0]
 [  0  32  15   0   0   0   0   0   0   6  61   4   0   0   0   0]
 [  0   0   2   0   0   0   0   0   0   0   1   0  34   0   4   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   1   0   0   0  39   0   0   0   0   1   0   0   0  36   0]
 [  0   2   0   0   0   0   0   0   0   0   0   0   0   0   0  16]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FORESTpixel 0.8 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.56      0.71         9
         2.0       0.78      0.78      0.78       285
         3.0       0.02      0.01      0.01       166
         4.0       0.49      0.40      0.44        47
         5.0       0.86      0.66      0.75        96
         6.0       0.81      0.95      0.88       146
         7.0       1.00      0.60      0.75         5
         8.0       0.87      1.00      0.93        95
         9.0       0.00      0.00      0.00         4
        10.0       0.71      0.41      0.52       194
        11.0       0.58      0.94      0.72       491
        12.0       0.88      0.13      0.22       118
        13.0       0.95      0.95      0.95        41
        14.0       0.99      1.00      0.99       253
        15.0       0.83      0.58      0.69        77
        16.0       0.94      0.94      0.94        18

   micro avg       0.71      0.71      0.71      2045
   macro avg       0.73      0.62      0.64      2045
weighted avg       0.71      0.71      0.68      2045

[[  5   0   0   0   0   0   0   4   0   0   0   0   0   0   0   0]
 [  0 222  21  20   0   0   0   1   0   1  20   0   0   0   0   0]
 [  0   9   1   0   0   0   0   0   0   0 156   0   0   0   0   0]
 [  0  13   4  19   0   2   0   1   0   0   8   0   0   0   0   0]
 [  0   2   0   0  63  10   0   6   0   2   8   0   0   0   5   0]
 [  0   0   0   0   1 139   0   0   0   0   0   0   0   3   3   0]
 [  0   0   0   0   0   0   3   1   0   0   1   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   3   0   0   0   0   0   0   0   0   1   0]
 [  0   2   3   0   0   1   0   0   0  80 108   0   0   0   0   0]
 [  0  10  10   0   0   0   0   0   0   7 463   1   0   0   0   0]
 [  0  24  23   0   0   0   0   0   0  23  33  15   0   0   0   0]
 [  0   0   0   0   0   1   0   0   0   0   1   0  39   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   2   0   0   9  15   0   1   0   0   1   1   2   0  45   1]
 [  0   1   0   0   0   0   0   0   0   0   0   0   0   0   0  17]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 none 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.04      0.08        23
         2.0       0.64      0.53      0.58       714
         3.0       0.62      0.14      0.23       415
         4.0       1.00      0.03      0.07       118
         5.0       0.97      0.83      0.89       234
         6.0       0.74      0.99      0.85       365
         7.0       1.00      0.21      0.35        14
         8.0       0.91      1.00      0.95       239
         9.0       1.00      0.10      0.18        10
        10.0       0.96      0.62      0.75       476
        11.0       0.51      0.93      0.66      1227
        12.0       0.97      0.12      0.21       296
        13.0       1.00      0.85      0.92       102
        14.0       0.91      1.00      0.95       632
        15.0       1.00      0.21      0.35       193
        16.0       1.00      0.93      0.97        46

   micro avg       0.69      0.69      0.69      5104
   macro avg       0.89      0.53      0.56      5104
weighted avg       0.76      0.69      0.65      5104

[[   1    0    0    0    1    0    0   19    0    0    2    0    0    0
     0    0]
 [   0  378    3    0    0    0    0    0    0    7  326    0    0    0
     0    0]
 [   0   11   58    0    0    0    0    0    0    0  346    0    0    0
     0    0]
 [   0   60   16    4    0    0    0    0    0    0   38    0    0    0
     0    0]
 [   0    1    2    0  195    8    0    4    0    0    5    0    0   19
     0    0]
 [   0    0    0    0    0  361    0    0    0    0    0    0    0    4
     0    0]
 [   0    2    0    0    2    0    3    1    0    0    6    0    0    0
     0    0]
 [   0    0    0    0    0    0    0  239    0    0    0    0    0    0
     0    0]
 [   0    0    0    0    0    9    0    0    1    0    0    0    0    0
     0    0]
 [   0   10    1    0    0    0    0    0    0  295  170    0    0    0
     0    0]
 [   0   76    2    0    0    0    0    0    0    4 1145    0    0    0
     0    0]
 [   0   48   11    0    0    0    0    0    0    2  200   35    0    0
     0    0]
 [   0    3    0    0    0    0    0    0    0    0   10    1   87    1
     0    0]
 [   0    0    0    0    0    0    0    0    0    0    0    0    0  632
     0    0]
 [   0    1    0    0    4  108    0    0    0    0    1    0    0   38
    41    0]
 [   0    2    0    0    0    0    0    0    0    0    1    0    0    0
     0   43]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.5 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.04      0.08        23
         2.0       0.64      0.54      0.59       714
         3.0       0.59      0.14      0.23       415
         4.0       1.00      0.03      0.07       118
         5.0       0.97      0.85      0.91       234
         6.0       0.75      0.98      0.85       365
         7.0       1.00      0.21      0.35        14
         8.0       0.91      1.00      0.95       239
         9.0       0.00      0.00      0.00        10
        10.0       0.94      0.61      0.74       476
        11.0       0.51      0.93      0.66      1227
        12.0       1.00      0.14      0.24       296
        13.0       1.00      0.95      0.97       102
        14.0       0.91      1.00      0.95       632
        15.0       0.96      0.23      0.37       193
        16.0       1.00      0.91      0.95        46

   micro avg       0.69      0.69      0.69      5104
   macro avg       0.82      0.54      0.56      5104
weighted avg       0.76      0.69      0.65      5104

[[   1    0    0    0    0    0    0   20    0    0    2    0    0    0
     0    0]
 [   0  385    3    0    0    0    0    0    0    3  323    0    0    0
     0    0]
 [   0   10   60    0    0    0    0    0    0    1  343    0    0    0
     1    0]
 [   0   57   17    4    0    0    0    0    0    0   40    0    0    0
     0    0]
 [   0    2    0    0  200    7    0    2    0    0    6    0    0   16
     1    0]
 [   0    0    0    0    0  359    0    0    0    0    0    0    0    6
     0    0]
 [   0    0    0    0    3    0    3    2    0    0    6    0    0    0
     0    0]
 [   0    0    0    0    0    0    0  239    0    0    0    0    0    0
     0    0]
 [   0    0    0    0    0    7    0    0    0    0    3    0    0    0
     0    0]
 [   0   13    1    0    0    0    0    0    0  288  174    0    0    0
     0    0]
 [   0   77    5    0    0    0    0    0    0    9 1136    0    0    0
     0    0]
 [   0   54   13    0    0    0    0    0    0    4  185   40    0    0
     0    0]
 [   0    0    1    0    0    0    0    0    0    0    4    0   97    0
     0    0]
 [   0    0    0    0    0    0    0    0    0    0    0    0    0  632
     0    0]
 [   0    0    1    0    3  105    0    0    0    0    1    0    0   39
    44    0]
 [   0    3    0    0    0    0    0    0    0    0    1    0    0    0
     0   42]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.7 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.08      0.14        13
         2.0       0.72      0.79      0.75       428
         3.0       0.12      0.03      0.05       249
         4.0       1.00      0.06      0.11        71
         5.0       0.98      0.72      0.83       141
         6.0       0.75      0.98      0.85       219
         7.0       1.00      0.50      0.67         8
         8.0       0.91      1.00      0.95       143
         9.0       1.00      0.33      0.50         6
        10.0       0.94      0.58      0.72       281
        11.0       0.56      0.96      0.71       736
        12.0       0.80      0.05      0.09       177
        13.0       1.00      0.87      0.93        61
        14.0       0.92      1.00      0.96       379
        15.0       0.90      0.32      0.47       115
        16.0       1.00      0.93      0.96        27

   micro avg       0.72      0.72      0.72      3054
   macro avg       0.85      0.57      0.61      3054
weighted avg       0.73      0.72      0.67      3054

[[  1   0   0   0   0   0   0  10   0   0   0   2   0   0   0   0]
 [  0 337   0   0   0   0   0   0   0   1  90   0   0   0   0   0]
 [  0   2   7   0   0   0   0   0   0   0 240   0   0   0   0   0]
 [  0  37  16   4   0   0   0   0   0   0  14   0   0   0   0   0]
 [  0   2   1   0 102  12   0   4   0   0   7   0   0  11   2   0]
 [  0   0   0   0   0 214   0   0   0   0   0   0   0   5   0   0]
 [  0   0   0   0   0   0   4   1   0   0   3   0   0   0   0   0]
 [  0   0   0   0   0   0   0 143   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   2   0   0   2   0   0   0   0   0   2   0]
 [  0   1   0   0   0   0   0   0   0 163 117   0   0   0   0   0]
 [  0  20   7   0   0   0   0   0   0   1 708   0   0   0   0   0]
 [  0  63  25   0   0   0   0   0   0   8  73   8   0   0   0   0]
 [  0   0   4   0   0   0   0   0   0   0   4   0  53   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 379   0   0]
 [  0   1   0   0   2  57   0   0   0   0   1   0   0  17  37   0]
 [  0   2   0   0   0   0   0   0   0   0   0   0   0   0   0  25]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       0.00      0.00      0.00         9
         2.0       0.80      0.96      0.87       285
         3.0       0.00      0.00      0.00       166
         4.0       0.86      0.13      0.22        47
         5.0       0.99      0.76      0.86        96
         6.0       0.71      0.96      0.82       146
         7.0       1.00      0.20      0.33         5
         8.0       0.90      1.00      0.95        95
         9.0       1.00      0.25      0.40         4
        10.0       0.95      0.45      0.61       184
        11.0       0.58      0.98      0.73       491
        12.0       0.78      0.06      0.11       118
        13.0       1.00      0.83      0.91        41
        14.0       0.98      1.00      0.99       253
        15.0       0.94      0.39      0.55        77
        16.0       1.00      0.94      0.97        18

   micro avg       0.73      0.73      0.73      2035
   macro avg       0.78      0.56      0.58      2035
weighted avg       0.73      0.73      0.68      2035

[[  0   0   0   0   0   0   0   9   0   0   0   0   0   0   0   0]
 [  0 273   3   1   0   0   0   0   0   0   8   0   0   0   0   0]
 [  0   5   0   0   0   1   0   0   0   0 160   0   0   0   0   0]
 [  0  20   7   6   0   0   0   0   0   0  12   2   0   0   0   0]
 [  0   1   3   0  73  10   0   2   0   0   6   0   0   0   1   0]
 [  0   0   0   0   0 140   0   0   0   0   0   0   0   6   0   0]
 [  0   0   0   0   0   0   1   0   0   0   4   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   1   0   0   2   0   0   1   0   0   0   0   0   0   0]
 [  0   1   0   0   0   0   0   0   0  82 101   0   0   0   0   0]
 [  0   2   8   0   0   0   0   0   0   0 481   0   0   0   0   0]
 [  0  36  13   0   0   0   0   0   0   4  58   7   0   0   0   0]
 [  0   0   3   0   0   0   0   0   0   0   3   0  34   0   1   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   2   0   0   1  44   0   0   0   0   0   0   0   0  30   0]
 [  0   1   0   0   0   0   0   0   0   0   0   0   0   0   0  17]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.9 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.75      0.86         4
         2.0       0.83      0.92      0.87       142
         3.0       0.00      0.00      0.00        83
         4.0       1.00      0.13      0.23        23
         5.0       0.87      0.98      0.92        48
         6.0       0.95      0.96      0.95        73
         7.0       1.00      1.00      1.00         2
         8.0       0.98      1.00      0.99        47
         9.0       1.00      0.50      0.67         2
        10.0       0.00      0.00      0.00        87
        11.0       0.56      0.97      0.71       245
        12.0       0.92      0.59      0.72        59
        13.0       1.00      0.95      0.97        20
        14.0       0.98      1.00      0.99       126
        15.0       0.93      0.74      0.82        38
        16.0       1.00      1.00      1.00         9

   micro avg       0.75      0.75      0.75      1008
   macro avg       0.81      0.72      0.73      1008
weighted avg       0.68      0.75      0.69      1008

[[  3   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0]
 [  0 130   1   0   0   0   0   0   0   0  11   0   0   0   0   0]
 [  0   6   0   0   0   1   0   0   0   0  76   0   0   0   0   0]
 [  0  11   2   3   0   0   0   0   0   0   4   3   0   0   0   0]
 [  0   0   0   0  47   0   0   0   0   0   1   0   0   0   0   0]
 [  0   0   0   0   0  70   0   0   0   0   0   0   0   2   1   0]
 [  0   0   0   0   0   0   2   0   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0  47   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   1   0   0   0   0   0   1   0]
 [  0   0   0   0   0   0   0   0   0   0  87   0   0   0   0   0]
 [  0   5   2   0   0   0   0   0   0   0 238   0   0   0   0   0]
 [  0   4  10   0   0   0   0   0   0   2   8  35   0   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   1   0  19   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 126   0   0]
 [  0   0   0   0   7   3   0   0   0   0   0   0   0   0  28   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   9]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 50 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.22      0.36         9
         2.0       0.63      0.69      0.66       285
         3.0       0.05      0.03      0.04       166
         4.0       0.58      0.38      0.46        47
         5.0       1.00      0.76      0.86        96
         6.0       0.76      0.96      0.85       146
         7.0       1.00      0.80      0.89         5
         8.0       0.86      1.00      0.92        95
         9.0       1.00      0.50      0.67         4
        10.0       0.92      0.44      0.60       184
        11.0       0.62      0.96      0.75       491
        12.0       0.40      0.03      0.06       118
        13.0       1.00      0.95      0.97        41
        14.0       0.98      1.00      0.99       253
        15.0       0.91      0.51      0.65        77
        16.0       1.00      0.94      0.97        18

   micro avg       0.71      0.71      0.71      2035
   macro avg       0.79      0.64      0.67      2035
weighted avg       0.70      0.71      0.67      2035

[[  2   0   0   0   0   0   0   7   0   0   0   0   0   0   0   0]
 [  0 198  57  13   0   0   0   0   0   0  16   1   0   0   0   0]
 [  0   0   5   0   0   0   0   0   0   0 160   0   0   0   1   0]
 [  0  12   7  18   0   0   0   0   0   0   7   3   0   0   0   0]
 [  0   0   3   0  73   5   0   9   0   0   5   0   0   0   1   0]
 [  0   0   0   0   0 140   0   0   0   0   0   0   0   4   2   0]
 [  0   0   0   0   0   0   4   0   0   0   0   1   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   2   0   0   2   0   0   0   0   0   0   0]
 [  0   2   1   0   0   0   0   0   0  81 100   0   0   0   0   0]
 [  0   5  13   0   0   0   0   0   0   1 472   0   0   0   0   0]
 [  0  94  10   0   0   0   0   0   0   6   4   4   0   0   0   0]
 [  0   0   2   0   0   0   0   0   0   0   0   0  39   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   0   0   0   0  37   0   0   0   0   0   1   0   0  39   0]
 [  0   1   0   0   0   0   0   0   0   0   0   0   0   0   0  17]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 weight
Chargement des donnees d entrainement  :
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]
              precision    recall  f1-score   support

         1.0       1.00      0.11      0.20         9
         2.0       0.80      0.98      0.88       285
         3.0       0.00      0.00      0.00       166
         4.0       1.00      0.09      0.16        47
         5.0       0.97      0.74      0.84        96
         6.0       0.73      0.96      0.83       146
         7.0       1.00      0.60      0.75         5
         8.0       0.89      1.00      0.94        95
         9.0       1.00      0.25      0.40         4
        10.0       0.95      0.45      0.61       184
        11.0       0.58      0.98      0.73       491
        12.0       0.11      0.01      0.02       118
        13.0       1.00      0.93      0.96        41
        14.0       0.98      1.00      0.99       253
        15.0       0.91      0.42      0.57        77
        16.0       1.00      0.89      0.94        18

   micro avg       0.74      0.74      0.74      2035
   macro avg       0.81      0.59      0.61      2035
weighted avg       0.70      0.74      0.68      2035

[[  1   0   0   0   0   0   0   8   0   0   0   0   0   0   0   0]
 [  0 278   0   0   0   0   0   0   0   0   6   1   0   0   0   0]
 [  0   4   0   0   0   0   0   0   0   0 162   0   0   0   0   0]
 [  0  14   9   4   0   0   0   0   0   0  13   7   0   0   0   0]
 [  0   3   0   0  71   8   0   4   0   1   7   0   0   0   2   0]
 [  0   0   0   0   0 140   0   0   0   0   0   0   0   6   0   0]
 [  0   0   0   0   0   0   3   0   0   0   2   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   3   0   0   1   0   0   0   0   0   0   0]
 [  0   2   0   0   0   0   0   0   0  82 100   0   0   0   0   0]
 [  0   3   5   0   0   0   0   0   0   0 483   0   0   0   0   0]
 [  0  41  16   0   0   0   0   0   0   3  57   1   0   0   0   0]
 [  0   0   2   0   0   0   0   0   0   0   0   0  38   0   1   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   1   0   0   2  42   0   0   0   0   0   0   0   0  32   0]
 [  0   2   0   0   0   0   0   0   0   0   0   0   0   0   0  16]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 none weight
Chargement des donnees d entrainement  :
              precision    recall  f1-score   support

         1.0       1.00      0.33      0.50         9
         2.0       0.45      0.37      0.41       285
         3.0       0.23      0.04      0.07       166
         4.0       0.29      0.51      0.37        47
         5.0       0.93      0.82      0.87        96
         6.0       0.71      0.92      0.81       146
         7.0       0.75      0.60      0.67         5
         8.0       0.93      0.97      0.95        95
         9.0       1.00      1.00      1.00         4
        10.0       0.76      0.43      0.55       184
        11.0       0.60      0.87      0.71       491
        12.0       0.08      0.08      0.08       118
        13.0       1.00      0.27      0.42        41
        14.0       0.98      1.00      0.99       253
        15.0       0.57      0.43      0.49        77
        16.0       1.00      0.94      0.97        18

   micro avg       0.63      0.63      0.63      2035
   macro avg       0.70      0.60      0.62      2035
weighted avg       0.62      0.63      0.60      2035

[[  3   0   0   0   0   0   1   5   0   0   0   0   0   0   0   0]
 [  0 106   7  47   0   0   0   0   0   0  13 112   0   0   0   0]
 [  0  20   7   0   0   0   0   0   0   1 138   0   0   0   0   0]
 [  0   2   7  24   0   0   0   0   0   0   5   9   0   0   0   0]
 [  0   0   0   0  79  12   0   0   0   0   0   0   0   0   5   0]
 [  0   0   0   0   0 135   0   0   0   0   0   0   0   5   6   0]
 [  0   0   0   0   0   0   3   2   0   0   0   0   0   0   0   0]
 [  0   0   0   0   3   0   0  92   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   4   0   0   0   0   0   0   0]
 [  0   9   5   0   0   0   0   0   0  79  91   0   0   0   0   0]
 [  0  38   0   0   0   0   0   0   0  24 429   0   0   0   0   0]
 [  0  60   5   0   0   0   0   0   0   0  43  10   0   0   0   0]
 [  0   1   0  13   0   1   0   0   0   0   1   0  11   0  14   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   0   0   0   3  41   0   0   0   0   0   0   0   0  33   0]
 [  0   0   0   0   0   0   0   0   0   0   0   1   0   0   0  17]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 none
Chargement des donnees d entrainement  :
              precision    recall  f1-score   support

         2.0       0.70      0.36      0.47       780
         3.0       0.11      0.22      0.14        79
         5.0       0.00      0.00      0.00        18
         6.0       0.68      0.99      0.80       238
        10.0       0.00      0.00      0.00       741
        11.0       0.34      0.84      0.49       809
        12.0       0.44      0.08      0.14       190
        14.0       0.48      1.00      0.65       120
        15.0       1.00      0.06      0.11       249

   micro avg       0.42      0.42      0.42      3224
   macro avg       0.42      0.39      0.31      3224
weighted avg       0.43      0.42      0.34      3224

[[278   7   0   0  31 462   2   0   0]
 [ 26  17   0   0   0  34   2   0   0]
 [  0   1   0   1   1  12   3   0   0]
 [  0   0   0 235   0   0   0   3   0]
 [ 63  37   0   2   0 633   6   0   0]
 [ 28  95   0   3   0 676   7   0   0]
 [  1   2   0   0  17 154  16   0   0]
 [  0   0   0   0   0   0   0 120   0]
 [  0   1   0 106   0   1   0 127  14]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 rdPix
Chargement des donnees d entrainement  :
              precision    recall  f1-score   support

         1.0       1.00      0.75      0.86         8
         2.0       0.87      0.85      0.86       284
         3.0       0.97      0.76      0.85       151
         4.0       1.00      0.28      0.43        40
         5.0       0.99      0.96      0.98       102
         6.0       0.94      1.00      0.97       143
         7.0       1.00      0.50      0.67         4
         8.0       0.98      1.00      0.99        84
         9.0       1.00      0.50      0.67         2
        10.0       0.95      0.87      0.91       181
        11.0       0.82      0.99      0.90       474
        12.0       0.95      0.79      0.86       109
        13.0       1.00      1.00      1.00        51
        14.0       0.95      0.99      0.97       284
        15.0       0.94      0.70      0.81        71
        16.0       0.94      1.00      0.97        16

   micro avg       0.91      0.91      0.91      2004
   macro avg       0.96      0.81      0.85      2004
weighted avg       0.91      0.91      0.90      2004

[[  6   0   0   0   0   0   0   2   0   0   0   0   0   0   0   0]
 [  0 240   0   0   0   0   0   0   0   6  37   1   0   0   0   0]
 [  0   9 115   0   0   0   0   0   0   0  25   2   0   0   0   0]
 [  0  17   4  11   0   0   0   0   0   0   6   2   0   0   0   0]
 [  0   3   0   0  98   0   0   0   0   0   0   0   0   1   0   0]
 [  0   0   0   0   0 143   0   0   0   0   0   0   0   0   0   0]
 [  0   0   0   0   1   0   2   0   0   0   1   0   0   0   0   0]
 [  0   0   0   0   0   0   0  84   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0]
 [  0   2   0   0   0   0   0   0   0 158  21   0   0   0   0   0]
 [  0   2   0   0   0   0   0   0   0   1 471   0   0   0   0   0]
 [  0   4   0   0   0   0   0   0   0   1  16  86   0   0   1   1]
 [  0   0   0   0   0   0   0   0   0   0   0   0  51   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 282   2   0]
 [  0   0   0   0   0   8   0   0   0   0   0   0   0  13  50   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  16]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 block
Chargement des donnees d entrainement  :
              precision    recall  f1-score   support

         2.0       0.94      0.45      0.61       629
         3.0       0.76      0.22      0.34       390
         4.0       0.00      0.00      0.00         0
         5.0       1.00      0.55      0.71        88
         6.0       0.99      0.99      0.99       238
         8.0       0.00      0.00      0.00         0
        10.0       0.00      0.00      0.00        95
        11.0       0.04      0.08      0.05       366
        12.0       0.00      0.00      0.00         0
        14.0       0.98      0.75      0.85       120
        15.0       0.00      0.00      0.00         0

   micro avg       0.40      0.40      0.40      1926
   macro avg       0.43      0.27      0.32      1926
weighted avg       0.70      0.40      0.48      1926

[[281   0   2   0   0   0  66 267  13   0   0]
 [  6  85   0   0   0   0   1 264  33   0   1]
 [  0   0   0   0   0   0   0   0   0   0   0]
 [  0   0   0  48   3  16   0  11   0   0  10]
 [  0   0   0   0 235   0   0   1   0   2   0]
 [  0   0   0   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0]
 [ 11  27   0   0   0   0  46  28 254   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0   0  90  30]
 [  0   0   0   0   0   0   0   0   0   0   0]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
RANDOM FOREST 5 0.8 100 weight
Chargement des donnees d entrainement  :
              precision    recall  f1-score   support

         1.0       0.00      0.00      0.00         9
         2.0       0.83      0.94      0.88       285
         3.0       0.00      0.00      0.00       166
         4.0       0.92      0.23      0.37        47
         5.0       0.99      0.69      0.81        96
         6.0       0.68      0.97      0.80       146
         7.0       1.00      0.40      0.57         5
         8.0       0.88      1.00      0.94        95
         9.0       1.00      0.75      0.86         4
        10.0       0.96      0.46      0.62       184
        11.0       0.58      0.98      0.73       491
        12.0       0.23      0.03      0.05       118
        13.0       1.00      0.83      0.91        41
        14.0       0.98      1.00      0.99       253
        15.0       0.84      0.27      0.41        77
        16.0       1.00      0.94      0.97        18

   micro avg       0.73      0.73      0.73      2035
   macro avg       0.74      0.59      0.62      2035
weighted avg       0.70      0.73      0.68      2035

[[  0   0   0   0   0   0   0   9   0   0   0   0   0   0   0   0]
 [  0 269   4   1   0   0   0   0   0   0  11   0   0   0   0   0]
 [  0   0   0   0   0   1   0   0   0   0 165   0   0   0   0   0]
 [  0  11  10  11   0   0   0   0   0   0   5  10   0   0   0   0]
 [  0   3   1   0  66  12   0   4   0   1   5   0   0   0   4   0]
 [  0   0   0   0   0 142   0   0   0   0   0   0   0   4   0   0]
 [  0   1   0   0   0   0   2   0   0   0   2   0   0   0   0   0]
 [  0   0   0   0   0   0   0  95   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   1   0   0   3   0   0   0   0   0   0   0]
 [  0   1   0   0   0   0   0   0   0  85  98   0   0   0   0   0]
 [  0   2   9   0   0   0   0   0   0   0 480   0   0   0   0   0]
 [  0  33  17   0   0   0   0   0   0   3  62   3   0   0   0   0]
 [  0   0   5   0   0   0   0   0   0   0   2   0  34   0   0   0]
 [  0   0   0   0   0   0   0   0   0   0   0   0   0 253   0   0]
 [  0   2   0   0   1  52   0   0   0   0   1   0   0   0  21   0]
 [  0   1   0   0   0   0   0   0   0   0   0   0   0   0   0  17]]
dict_keys(['mean_fit_time', 'std_fit_time', 'mean_score_time', 'std_score_time', 'param_max_depth', 'param_n_estimators', 'params', 'split0_test_score', 'split1_test_score', 'split2_test_score', 'split3_test_score', 'split4_test_score', 'mean_test_score', 'std_test_score', 'rank_test_score', 'split0_train_score', 'split1_train_score', 'split2_train_score', 'split3_train_score', 'split4_train_score', 'mean_train_score', 'std_train_score'])
Best parameters set :
	max_depth: None
	n_estimators: 100
